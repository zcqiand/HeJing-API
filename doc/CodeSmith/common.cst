public string[] GetDtoBaseFields()
{
    return new string[] { "CreateTime", "CreateUserId", "CreateUserName", "CreateFullName", "CreateOrganizationId", "CreateOrganizationName", "LastModifyTime", "LastModifyUserId", "LastModifyUserName", "LastModifyFullName", "DataSource", "IsDeleted" };

}

public string SimplifyType(object val)
{
     var ty=val.ToString();
     if(ty=="System.DateTime")
     {
         return "DateTime";
     }
     if(ty=="System.Guid")
     {
         return "Guid";
     }
     return ty;
}
 
public string GetPrimaryKeyName()
{
	for (int i = 0; i < SourceTable.Columns.Count; i++)
	{        
        ColumnSchema column = SourceTable.Columns[i];
        if (column.IsPrimaryKeyMember) { 
            return column.Name;
        }
	}
	
	return "Id";
}
 
public string BuildDefineParameters()
{
	System.Text.StringBuilder builder = new System.Text.StringBuilder();
	for (int i = 0; i < SourceTable.Columns.Count; i++)
	{        
        ColumnSchema column = SourceTable.Columns[i];
        if (!column.IsPrimaryKeyMember) { 
            builder.Append(CSharpAlias[column.SystemType.FullName]);
            builder.Append(column.AllowDBNull && CSharpAlias[column.SystemType.FullName] != "string" ? "?" : "");
    		builder.Append(" ");
            builder.Append(StringUtil.ToCamelCase(column.Name));
    		builder.Append(", ");
        }
	}
	
	if (builder.ToString().Length > 0)
	{
		return builder.ToString().Substring(0, builder.Length - 2);
	}
	else
	{
		return "";
	}
}

public string BuildCallParameters()
{
	System.Text.StringBuilder builder = new System.Text.StringBuilder();
	for (int i = 0; i < SourceTable.Columns.Count; i++)
	{        
        ColumnSchema column = SourceTable.Columns[i];
        if (!column.IsPrimaryKeyMember) {
            builder.Append(StringUtil.ToCamelCase(column.Name));
    		builder.Append(", ");
        }
	}
	
	if (builder.ToString().Length > 0)
	{
		return builder.ToString().Substring(0, builder.Length - 2);
	}
	else
	{
		return "";
	}
}

public string BuildCallParameters(string objectName)
{
	System.Text.StringBuilder builder = new System.Text.StringBuilder();
	for (int i = 0; i < SourceTable.Columns.Count; i++)
	{        
        ColumnSchema column = SourceTable.Columns[i];
        if (!column.IsPrimaryKeyMember) {
            builder.Append(objectName+"."+StringUtil.ToPascalCase(column.Name));
    		builder.Append(", ");
        }
	}
	
	if (builder.ToString().Length > 0)
	{
		return builder.ToString().Substring(0, builder.Length - 2);
	}
	else
	{
		return "";
	}
}
